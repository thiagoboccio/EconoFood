//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EconoFood.Admin.DominioService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Dominio", Namespace="http://schemas.datacontract.org/2004/07/EconoFood.Services.DTO")]
    [System.SerializableAttribute()]
    public partial class Dominio : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescricaoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short TipoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descricao {
            get {
                return this.DescricaoField;
            }
            set {
                if ((object.ReferenceEquals(this.DescricaoField, value) != true)) {
                    this.DescricaoField = value;
                    this.RaisePropertyChanged("Descricao");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Tipo {
            get {
                return this.TipoField;
            }
            set {
                if ((this.TipoField.Equals(value) != true)) {
                    this.TipoField = value;
                    this.RaisePropertyChanged("Tipo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="eTipoDominio", Namespace="http://schemas.datacontract.org/2004/07/EconoFood.Services")]
    public enum eTipoDominio : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PerfilUsuario = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SituacaoPagamento = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SituacaoEnvio = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DominioService.IDominio")]
    public interface IDominio {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDominio/Listar", ReplyAction="http://tempuri.org/IDominio/ListarResponse")]
        System.Collections.Generic.List<EconoFood.Admin.DominioService.Dominio> Listar();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDominio/Listar", ReplyAction="http://tempuri.org/IDominio/ListarResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<EconoFood.Admin.DominioService.Dominio>> ListarAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDominio/PesquisarPorTipo", ReplyAction="http://tempuri.org/IDominio/PesquisarPorTipoResponse")]
        System.Collections.Generic.List<EconoFood.Admin.DominioService.Dominio> PesquisarPorTipo(EconoFood.Admin.DominioService.eTipoDominio idTipoDominio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDominio/PesquisarPorTipo", ReplyAction="http://tempuri.org/IDominio/PesquisarPorTipoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<EconoFood.Admin.DominioService.Dominio>> PesquisarPorTipoAsync(EconoFood.Admin.DominioService.eTipoDominio idTipoDominio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDominio/PesquisarPorID", ReplyAction="http://tempuri.org/IDominio/PesquisarPorIDResponse")]
        System.Collections.Generic.List<EconoFood.Admin.DominioService.Dominio> PesquisarPorID(short idDominio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDominio/PesquisarPorID", ReplyAction="http://tempuri.org/IDominio/PesquisarPorIDResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<EconoFood.Admin.DominioService.Dominio>> PesquisarPorIDAsync(short idDominio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDominio/Gravar", ReplyAction="http://tempuri.org/IDominio/GravarResponse")]
        int Gravar(EconoFood.Admin.DominioService.Dominio Dominio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDominio/Gravar", ReplyAction="http://tempuri.org/IDominio/GravarResponse")]
        System.Threading.Tasks.Task<int> GravarAsync(EconoFood.Admin.DominioService.Dominio Dominio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDominio/Excluir", ReplyAction="http://tempuri.org/IDominio/ExcluirResponse")]
        void Excluir(EconoFood.Admin.DominioService.Dominio Dominio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDominio/Excluir", ReplyAction="http://tempuri.org/IDominio/ExcluirResponse")]
        System.Threading.Tasks.Task ExcluirAsync(EconoFood.Admin.DominioService.Dominio Dominio);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDominioChannel : EconoFood.Admin.DominioService.IDominio, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DominioClient : System.ServiceModel.ClientBase<EconoFood.Admin.DominioService.IDominio>, EconoFood.Admin.DominioService.IDominio {
        
        public DominioClient() {
        }
        
        public DominioClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DominioClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DominioClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DominioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<EconoFood.Admin.DominioService.Dominio> Listar() {
            return base.Channel.Listar();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<EconoFood.Admin.DominioService.Dominio>> ListarAsync() {
            return base.Channel.ListarAsync();
        }
        
        public System.Collections.Generic.List<EconoFood.Admin.DominioService.Dominio> PesquisarPorTipo(EconoFood.Admin.DominioService.eTipoDominio idTipoDominio) {
            return base.Channel.PesquisarPorTipo(idTipoDominio);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<EconoFood.Admin.DominioService.Dominio>> PesquisarPorTipoAsync(EconoFood.Admin.DominioService.eTipoDominio idTipoDominio) {
            return base.Channel.PesquisarPorTipoAsync(idTipoDominio);
        }
        
        public System.Collections.Generic.List<EconoFood.Admin.DominioService.Dominio> PesquisarPorID(short idDominio) {
            return base.Channel.PesquisarPorID(idDominio);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<EconoFood.Admin.DominioService.Dominio>> PesquisarPorIDAsync(short idDominio) {
            return base.Channel.PesquisarPorIDAsync(idDominio);
        }
        
        public int Gravar(EconoFood.Admin.DominioService.Dominio Dominio) {
            return base.Channel.Gravar(Dominio);
        }
        
        public System.Threading.Tasks.Task<int> GravarAsync(EconoFood.Admin.DominioService.Dominio Dominio) {
            return base.Channel.GravarAsync(Dominio);
        }
        
        public void Excluir(EconoFood.Admin.DominioService.Dominio Dominio) {
            base.Channel.Excluir(Dominio);
        }
        
        public System.Threading.Tasks.Task ExcluirAsync(EconoFood.Admin.DominioService.Dominio Dominio) {
            return base.Channel.ExcluirAsync(Dominio);
        }
    }
}
